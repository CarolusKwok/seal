library(usethis)
library(devtools)
use_r("file_read")
use_r("file_check")
use_r("data_check")
use_r("sys_msgerror")
use_r("sys_msgwarn")
usethis::use_package("cli")
sys_msgerror = function(func,
error){
if(hasArg(func)){
cli::text("An error has occurred in {func}")
}
}
sys_msgerror("fuck")
sys_msgerror = function(func,
error){
if(hasArg(func)){
cli::cli_text("An error has occurred in {func}")
}
}
sys_msgerror("fuck")
sys_msgerror = function(func,
error){
if(hasArg(func)){
cli::cli_text("An error has occurred in {.var func}")
}
}
sys_msgerror("fuck")
sys_msgerror = function(func,
error){
if(hasArg(func)){
cli::cli_text("An error has occurred in {.var func}")
}
}
sys_msgerror("fuck")
sys_msgerror()
sys_msgerror = function(func,
title,
error){
if(hasArg(func)){
cli::cli_text("An error has occurred in {.var func}")
}
cli::cli_text("{title}")
}
sys_msgerror()
sys_msgerror(func = NULL)
sys_msgerror(func = NULL, title = "hi")
sys_msgerror = function(func,
title,
error){
if(hasArg(func)){
cli::cli_text("An error has occurred in {.var func}")
}
cli::cli_text("Error: {title}")
cli::cli_bullets(error)
}
sys_msgerror(func = NULL, title = "hi")
sys_msgerror = function(func = NULL,
title,
error){
if(!is.null(func)){
cli::cli_text("An error has occurred in {.var func}")
}
cli::cli_text("Error: {title}")
cli::cli_bullets(error)
}
sys_msgerror(func = NULL, title = "hi", error = )
sys_msgerror(title = "hi", error = "hi")
sys_msgerror(title = "hi", error = c("x" = "hi"))
sys_msgerror("hi", error = c("x" = "hi"))
sys_msgerror = function(title,
sys_msgerror = function(title,
error,
func = NULL){
if(!is.null(func)){
cli::cli_text("An error has occurred in {.var func}")
}
cli::cli_text("Error: {title}")
cli::cli_bullets(error)
}
sys_msgerror("hi", error = c("x" = "hi"))
sys_msgerror = function(title,
error,
func = NULL){
if(!is.null(func)){
cli::cli_text("An error has occurred in {.var func}")
}
cli::cli_text("Error: {title}")
cli::cli_bullets(error)
}
sys_msgerror("hi", error = c("x" = "hi"))
library(seal)
sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = data_check)
seal:::sys_msgerror()
seal::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = data_check)
seal::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = data_check)
library(seal)
seal::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = data_check)
seal:::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = "data_check")
library(seal)
seal:::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = "data_check")
library(seal)
seal:::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = data_check)
seal::sys_msgerror("Data incomplete", c("X" = "Please fill in the data"), func = "data_check")
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgerror("Data incomplete", c("x" = "Please fill in the data"), func = "data_check")
??cli::cli_bullets
seal::sys_msgwarning("Data incomplete", c("!" = "Please fill in the data"), func = "data_check")
seal::sys_msgwarning("Data incomplete", c("!" = "Please fill in the data"), func = "data_check")
library(seal)
seal::sys_msgwarning("Data incomplete", c("!" = "Please fill in the data"), func = "data_check")
